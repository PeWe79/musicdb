/*
 * MusicDB,  a music manager with web-bases UI that focus on music.
 * Copyright (C) 2017-2020  Ralf Stemmer <ralf.stemmer@gmx.net>
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


/******************/
/* VideoQueueTile */
/******************/
.VideoQueueTile
{
    display:        flex;
    flex-direction: row;
}

.VideoQueueTile img
{
    width:          auto;
    height:         100%;
}

.VideoQueueTile > div:first-child
{
    border-radius:  var(--radius);
    overflow:       hidden;
    width:          var(--artworkwidth-small);
    height:         calc(var(--artworkwidth-small) / 1.77778);
    /* 1.77778 = 16/9 */
}


.VideoQueueTile > div:last-child
{
    flex-grow:      1;
}


.VideoQueueTile .infobox
{
    display:        flex;
    flex-direction: row;
    flex-wrap:      wrap;
    align-items:    center;
    margin-left:    1em;
}
.VideoQueueTile .infobox > div
{
    display:        flex;
}
.VideoQueueTile .infobox > div:first-child
{
    flex-grow:      1;
}
.VideoQueueTile .infobox > div:last-child
{
    flex-basis:     100%;
    align-self:     flex-start;
}



/******************/
/* SmallVideoTile */
/******************/

.smallvideotile
{
    position:       relative;
    max-width:      var(--artworkwidth-medium);
    overflow:       hidden;
    white-space:    nowrap;
}

.smallvideotile span
{
    display:        block;
}

.smallvideotile img
{
    width:          auto;
    height:         100%;
}

.smallvideotile > div:first-child
{
    border-radius:  var(--radius);
    overflow:       hidden;
    width:          var(--artworkwidth-medium);
    height:         calc(var(--artworkwidth-medium) / 1.77778);
    /* 1.77778 = 16/9 */
}

.smallvideotile[data-enabled=false]
{
    opacity:        0.5;
}
.smallvideotile[data-enabled=false] img
{
    filter:         brightness(70%) saturate(0%) !important;
}

.smallvideotile > .ButtonBox
{
    position:       absolute;
    top:            0.2em;
    right:          0.2em;

    border-radius:      var(--radius);
    overflow:           hidden;
    background-color:   rgba(0, 0, 0, 0.8);
    padding:            0.5em;
}




div.VT_videoentry
{
    display:        inline-block;
    margin-left:    5px;
    margin-right:   5px;
}
div.VT_videoentry[data-size=medium] {
    max-width:      150px;
}
div.VT_videoentry[data-size=small] {
    max-width:      60px;
}

div.VT_videocover
{
    border-radius:  5px;
    overflow:       hidden;
}
div.VT_videocover[data-size=medium] {
    width:          150px;
    height:          85px; /* 16:9 */
}
div.VT_videocover[data-size=small] {
    width:          107px; /* 16:9 */
    height:          60px;
}

/* on small screens use alwasy the small variant*/
@media only screen and (max-width: 1600px) 
{
    div.VT_videoentry[data-size=medium] {
        max-width:      120px;
    }
    div.VT_videocover[data-size=medium] {
        width:          120px;
        height:          68px; /* 16:9 */
    }
}


div.VT_videocover img
{
    width:          auto;
    height:         100%;
}

div.VT_videobuttons
{
    border-radius:  5px;
    background-color: rgba(0.1, 0.1, 0.1, 0.6);

    display:        flex;
    position:       absolute;
    margin-top:     5px;
    z-index:        100;
}
div.VT_videobuttons[data-size=medium] {
    margin-left:    100px; /*150px;*/
}
div.VT_videobuttons[data-size=small] {
    margin-left:     10px; /*60px;*/
}

div.VT_videometadata
{
    overflow:       hidden;
    white-space:    nowrap;
}

span.VT_videoname
{
    display:        inline-block;
    overflow:       hidden;
    white-space:    nowrap;
}
span.VT_videorelease
{
    display:        inline-block;
    float:          right;
}




/* vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4 
 */

